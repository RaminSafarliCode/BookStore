@model PagedViewModel<Book>

@{
    ViewData["Title"] = "Index";
}

<div class="page-header">
    <div class="row align-items-end">
        <div class="col-lg-8">
            <div class="page-header-title">
                <div class="d-inline">
                    <h4>Books</h4>
                </div>
            </div>
        </div>
        <div class="col-lg-4">
            <div class="page-header-breadcrumb">
                <ul class="breadcrumb-title">
                    <li class="breadcrumb-item">
                        <a asp-controller="Dashboard" asp-action="index">
                            <i class="feather icon-home"></i>
                        </a>
                    </li>
                    <li class="breadcrumb-item">
                        <span>Books</span>
                    </li>
                </ul>
            </div>
        </div>
    </div>
</div>

<div class="page-body">
    <div class="card">
        <div class="card-block table-border-style">
            <div class="table-responsive">
                <table class="table table-imaged">
                    <thead>
                        <tr>
                            <th>

                            </th>
                            <th>
                                Name
                            </th>
                            <th>
                                Author
                            </th>
                            <th>
                                Price
                            </th>
                            <th class="operations">
                                @if (User.HasAccess("admin.books.create"))
                                {
                                    <a asp-action="Create" class="btn btn-sm btn-primary">
                                        <i class="fa fa-plus"></i>
                                    </a>
                                }
                            </th>
                        </tr>
                    </thead>
                    <tbody id="dynamic-content">
                        <partial name="_ListBody" model="@Model" />
                    </tbody>
                </table>
            </div>

            @Model.GetPager(Url,"Index","Admin")
        </div>
    </div>
    @Html.AntiForgeryToken()
</div>

@section addcss{
    <link rel="stylesheet" href="~/libs/toastr.js/toastr.min.css" />
    <style>
        .pagination {
            display: inline-block;
            padding-left: 12px;
            margin: 20px 0;
            border-radius: 4px;
        }

            .pagination li {
                display: inline-block;
                text-transform: uppercase;
            }

            .pagination > li:first-child > a, .pagination > li:first-child > span, .pagination > li:last-child > a, .pagination > li:last-child > span {
                border-radius: 0;
            }

            .pagination > .disabled > a, .pagination > .disabled > a:focus, .pagination > .disabled > a:hover, .pagination > .disabled > span, .pagination > .disabled > span:focus, .pagination > .disabled > span, pagination > li > a:hover {
                color: #777;
                cursor: not-allowed;
                background-color: #fff;
                border-color: #ddd;
            }

            .pagination > li a {
                font-size: 15px;
                font-weight: bold;
                padding: 6px 14px;
            }

            .pagination > li > a, .pagination > li > span {
                position: relative;
                float: left;
                padding: 6px 12px;
                margin-left: -1px;
                line-height: 1.42857143;
                color: #337ab7;
                text-decoration: none;
                background-color: #fff;
                border: 1px solid #ddd;
            }

            .pagination > .active > a, .pagination > .active > a:focus, .pagination > .active > a:hover, .pagination > .active > span, .pagination > .active > span:focus, .pagination > .active > span:hover {
                z-index: 2;
                color: #fff;
                cursor: default;
                background-color: #337ab7;
                border-color: #337ab7;
            }

            .pagination a {
                color: #fff;
                font-size: 12px;
                margin: 0 10px;
            }

            .pagination > li > a:hover {
                color: #777;
                background-color: #fff;
                border-color: #ddd;
            }


            .pagination a i {
                margin: 0 5px;
            }

            .paginate-wrp {
            display: flex;
            justify-content: center;
            align-items: center;
        }

        .blog-pagination {
            display: flex;
            justify-content: center;
            align-items: center;
            gap: 1rem;
            margin-bottom: 1rem;
        }

            .blog-pagination li {
                list-style-type: none;
            }

        .pag-num {
            border: 1px solid #675c84;
            padding: 5px 10px;
            background-color: #675c84;
            color: white;
            border-radius: 5px 
        }

        .pag-num a{
            color: white!important;
        }
    </style>
}

    @section addjs{
    <script>
        function removeEntity(id, name) {
            swal(`Əminsiniz ki, '${name}' silinsin?`, {
                title: "Diqqət!",
                text: `Əminsiniz ki, '${name}' silinsin?`,
                icon: "warning",
                buttons: true,
                dangerMode: true,
                buttons: ["Xeyr", "Bəli"]
            })
                .then((value) => {

                    if (value == true) {

                        let vToken = $("[name=__RequestVerificationToken]").val();

                        let formData = new FormData();

                        formData.set("__RequestVerificationToken", vToken);
                        formData.set("id", id);

                        $.ajax({
                            url: `@Url.Action("Delete")`,
                            type: "POST",
                            data: formData,
                            contentType: false,
                            processData: false,
                            success: function(response) {
                                console.log(response);

                                if (response.error == true) {
                                    toastr.error(response.message, "Xeta!");
                                    return;
                                }

                                location.reload();
                            },
                            error: function(errorResponse) {
                                console.error(errorResponse);
                            }
                        });
                    }
                });
        }
    </script>
}

